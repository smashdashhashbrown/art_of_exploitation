#ifndef HACKING_NETWORK
#define HACKING_NETWORK

#define EOL "\r\n"
#define EOL_SIZE 2

#include <stdbool.h>

bool send_string(int sockfd, char *buffer) {
	int bytes_sent = 0;
	// @ASSUMPTION buffer null termination
	int bytes_to_send = strlen(buffer);

	while (bytes_to_send > 0) {
		bytes_sent = send(sockfd, buffer, bytes_to_send, 0);
		if (bytes_sent == -1) {
			return false;
		}

		bytes_to_send -= bytes_sent;
		buffer += bytes_sent;
	}
	return true;
}

// Buffer overflow vulnerable
int recv_line(int sockfd, char *dest_buffer) {
	char *ptr;
	int eol_match = 0;

	ptr = dest_buffer;
	while (recv(sockfd, ptr, 1, 0) == 1) {
		if (*ptr == EOL[eol_match]) {
			eol_match++;
			if (eol_match == EOL_SIZE) {
				*(ptr+1-EOL_SIZE) = '\0';
				return strlen(dest_buffer);
			}
		} else {
			eol_match = 0;
		}
		ptr++;
	}
	return 0;
}

#endif